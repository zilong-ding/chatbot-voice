# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'C:\Users\31136\Desktop\demo\demo.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
from utills import *
class Ui_Form(object):
    def __init__(self):
        self.path = None
    def setupUi(self, Form):
        self.path = "wave_files"
        if not os.path.exists(self.path):
            os.makedirs(self.path)
        if not os.path.exists('temp'):
            os.makedirs('temp')
        Form.setObjectName("Form")
        Form.resize(697, 463)
        Form.setAutoFillBackground(False)
        Form.setStyleSheet("background-color: rgb(85, 255, 255);\n"
                           "background-color: rgb(0, 170, 255);")
        self.pushButton = AudioButton(Form)
        self.label = QtWidgets.QLabel(Form)
        self.label.setGeometry(QtCore.QRect(50, 50, 611, 321))
        self.label.setStyleSheet("background-color: rgb(170, 255, 255);")
        self.label.setText("")
        self.label.setObjectName("label")
        self.retranslateUi(Form)
        self.pa = pyaudio.PyAudio()
        self.stream = self.pa.open(format=pyaudio.paInt16, channels=2, rate=16000, input=True, frames_per_buffer=2048)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "聊天机器人"))
        self.pushButton.setText(_translate("Form", "按住说话"))

    # def record(self):
    #     self.frames = []
    #     count = 0
    #     while count < 8 * 5:
    #         data = self.stream.read(2048)
    #         self.frames.append(data)
    #         count += 1

    # def answer_question(self):
    #     # self.stream.stop_stream()
    #     # self.stream.close()
    #     # wf = wave.open(f'{self.path}/recording.wav', 'wb')
    #     # wf.setnchannels(2)
    #     # wf.setsampwidth(2)
    #     # wf.setframerate(16000)
    #     # wf.writeframes(''.encode().join(self.frames))
    #     # wf.close()
    #
    #     wf = wave.open(f'{self.path}/recording.wav', 'rb')
    #     stream = self.pa.open(format=pyaudio.paInt16,
    #                           channels=wf.getnchannels(),
    #                           rate=wf.getframerate(),
    #                           output=True)
    #
    #     # 播放录制的音频
    #     data = wf.readframes(2048)
    #     while data:
    #         stream.write(data)
    #         data = wf.readframes(2048)
    #
    #     # 关闭音频流和WAV文件
    #     stream.stop_stream()
    #     stream.close()
    #     wf.close()


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = Ui_Form()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec_())
